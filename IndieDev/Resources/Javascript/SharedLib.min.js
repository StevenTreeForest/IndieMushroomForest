"use strict";const keyName_SavedPost="SavedPost";class DEF_SavedPostEntry{postLink="";imgLinks=[];postDate="";HasPostDateInfo=function(){try{console.assert(this instanceof DEF_SavedPostEntry,"Failed: this instanceof def_SavedPostEntry",this);const d=new Date(this.postDate);return!isNaN(d.getTime())}catch(error){console.error(`${error}.\n ${error.stack}`)}};IsValid=function(){try{var result=!0;return result=""!==this.postLink.trim()&&this.imgLinks.length>0}catch(error){console.error(`${error}.\n ${error.stack}`)}}}class SavedPostDataManager{static getSavedPostArray(){try{let data_savedPost=JSON.parse(localStorage.getItem("SavedPost"));return void 0!==data_savedPost&&null!=data_savedPost||(data_savedPost=[]),console.assert(!(void 0===data_savedPost||null==data_savedPost),"Failed: !(typeof data_savedPost === undefined)",data_savedPost),data_savedPost}catch(error){console.error(`${error}.\n ${error.stack}`)}}static SaveData(newArray){try{if(console.assert(newArray instanceof Array,"Failed: newArray instanceof Array",newArray),!(newArray instanceof Array))return;let fixed=[];for(let index=0;index<newArray.length;index++){const post=Object.assign(new DEF_SavedPostEntry,newArray[index]);post.IsValid()&&fixed.push(post)}localStorage.setItem("SavedPost",JSON.stringify(newArray))}catch(error){console.error(`${error}.\n ${error.stack}`)}}static removePostInSavedPost(link_post){try{let data_savedPost=SavedPostDataManager.getSavedPostArray(),data_new=[],found=!1;for(let i=0;i<data_savedPost.length;i++){let post_now=data_savedPost[i];post_now.postLink!=link_post&&data_new.push(post_now)}SavedPostDataManager.SaveData(data_new)}catch(error){console.error(`${error}.\n ${error.stack}`)}}}