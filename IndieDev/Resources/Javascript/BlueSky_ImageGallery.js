const keyName_SavedPost="SavedPost";class DEF_SavedPostEntry{postLink="";imgLinks=[]}function ThumbNailLinkCheck(){try{var t=$(".img_thumbnails");console.assert(0<t.length,"Failed: img.length>0",t),t.hide()}catch(t){console.error(t+`.
 `+t.stack)}}function getSavedPostArray(){try{let t=JSON.parse(localStorage.getItem(keyName_SavedPost));return void 0!==t&&null!=t||(t=[]),console.assert(!(void 0===t||null==t),"Failed: !(typeof data_savedPost === undefined)",t),t}catch(t){console.error(t+`.
 `+t.stack)}}function removePostInSavedPost(e){try{var o=getSavedPostArray(),a=[];for(let t=0;t<o.length;t++){var s=o[t];s.postLink!=e&&a.push(s)}localStorage.setItem(keyName_SavedPost,JSON.stringify(a))}catch(t){console.error(t+`.
 `+t.stack)}}function ShowSavedPost(){try{return}catch(t){console.error(t+`.
 `+t.stack)}}function checkLinksExist(){try{function t(t){const e=$(t);var o=e.attr("href");fetch(o).then(t=>{t.ok?e.show():e.hide()}).catch(()=>{$("#"+t).hide()})}t(".link_next_page"),t(".link_previous_page")}catch(t){console.error(t+`.
 `+t.stack)}}function AddSavedPost(t){try{console.assert(t instanceof HTMLAnchorElement,"Failed:  (tag_link instanceof HTMLAnchorElement)",t);var e=$(t),o=e.attr("href"),a=e.find("img"),s=(console.assert(0<a.length,"Failed: $imgs.length>0",e),a.map(function(){return $(this).attr("src")}).get()),n=(console.assert(0<s.length,"Failed: imgLinks.length>0",e),new DEF_SavedPostEntry),r=(Object.preventExtensions(n),n.postLink=o,n.imgLinks=s,keyName_SavedPost in localStorage||localStorage.setItem(keyName_SavedPost,JSON.stringify([])),removePostInSavedPost(n.postLink),getSavedPostArray());r.push(n),localStorage.setItem(keyName_SavedPost,JSON.stringify(r)),ShowSavedPost()}catch(t){console.error(t+`.
 `+t.stack)}}function UpdateSaveButtonColor(t){try{$div_this=$(t),console.assert($div_this.hasClass("entryDiv"),"Failed: $div_this.hasClass(.entryDiv)",t);var e=$div_this.find("a").attr("href"),o=getSavedPostArray();$div_this.find(".saveIcon svg").attr("fill","gray");for(let t=0;t<o.length;t++)if(o[t].postLink==e){$div_this.find(".saveIcon svg").attr("fill","red");break}}catch(t){console.error(t+`.
 `+t.stack)}}function Adjust_EntryDiv(){try{var o=$(".entryContainer .entryDiv");let e=new IntersectionObserver(t=>{t.forEach(t=>{t.isIntersecting&&UpdateSaveButtonColor(t.target)})},{root:null,threshold:.1});o.each(t=>{e.observe(o.get(t)),$("#Icon_Heart").clone().attr({class:"saveIcon"}).removeAttr("id","").appendTo($(o.eq(t))).on("click",function(){$div_this=$(this);var e=$(this).parent().find("a").get(0),o=getSavedPostArray();let a=!1;for(let t=0;t<o.length;t++)if(o[t].postLink==e){a=!0;break}a?(removePostInSavedPost(e),ShowSavedPost()):AddSavedPost(e),UpdateSaveButtonColor($(this).parent())})})}catch(t){console.error(t+`.
 `+t.stack)}}try{ThumbNailLinkCheck(),checkLinksExist(),Adjust_EntryDiv()}catch(t){console.error(t+`.
 `+t.stack)}