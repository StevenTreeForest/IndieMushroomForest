"use strict";function parseDate(){try{const userLang=navigator.language||"en-US",formatter=new Intl.DateTimeFormat(userLang,{month:"short",day:"numeric"});var list_savePosts=getSavedPostArray();let date_count=new Map;for(let index=0;index<list_savePosts.length;index++){const post=Object.assign(new DEF_SavedPostEntry,list_savePosts[index]);if(post.HasPostDateInfo){let key=post.postDate;date_count.has(key)||date_count.set(key,0);let count=parseInt(date_count.get(key));date_count.set(key,++count)}}var allSpan=$(".date-list span");allSpan.each(index=>{const $span=allSpan.eq(index),rawDate=$span.text().trim(),date=new Date(rawDate);if($span.attr("data-isoDate",rawDate),!isNaN(date.getTime())&&($span.text(formatter.format(date)),date_count.has(rawDate))){let count=parseInt(date_count.get(rawDate));$span.parent().parent().append("<span class='numSavedPost'>â™¥ "+count+"</span>")}})}catch(error){console.error(`${error}.\n ${error.stack}`)}}function parseMonth(){try{const userLang=navigator.language||"en-US";{const formatter_month=new Intl.DateTimeFormat(userLang,{month:"long"});var allSpan=$(".monthTitle");allSpan.each(index=>{const $span=allSpan.eq(index),rawDate=$span.text().trim(),date=new Date(rawDate);isNaN(date.getTime())||$span.text(formatter_month.format(date))})}}catch(error){console.error(`${error}.\n ${error.stack}`)}}!function(){try{parseDate(),parseMonth()}catch(error){console.error(`${error}.\n ${error.stack}`)}}();